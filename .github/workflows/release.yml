name: Maven Release
on:
  release:
    types: [ published ]
jobs:
  publish:
    name: Maven Artifact Publisher (JDK 11)
    runs-on: ubuntu-latest
    env:
      AUTORELEASE_ARTIFACT: ${{ secrets.AUTORELEASE_ARTIFACT }}
      SKIP_JAR_DEPLOYMENT: ${{ secrets.SKIP_JAR_DEPLOYMENT }}
    steps:
      - name: Check out source code
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.2
      - name: Install JDK 11
        uses: actions/setup-java@860f60056505705214d223b91ed7a30f173f6142 # v3.3.0
        with:
          cache: maven
          distribution: 'adopt'
          java-version: 11
      - name: Set autorelease config
        if: env.AUTORELEASE_ARTIFACT == null
        run: echo "AUTORELEASE_ARTIFACT=false" >> $GITHUB_ENV
      - name: Set Jar deployment config
        if: env.SKIP_JAR_DEPLOYMENT == null
        run: echo "SKIP_JAR_DEPLOYMENT=false" >> $GITHUB_ENV
      - name: Login to Docker repository
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # v2.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Release with Maven
        uses: samuelmeuli/action-maven-publish@201a45a3f311b2ee888f252ba9f4194257545709 # v1.4.0
        with:
          gpg_private_key: ${{ secrets.BUILD_KEY }}
          gpg_passphrase: ${{ secrets.BUILD_PASSPHRASE }}
          nexus_username: ${{ secrets.SONATYPE_USERNAME }}
          nexus_password: ${{ secrets.SONATYPE_PASSWORD }}
          maven_profiles: release
          maven_args: >
            -Drevision=${{ github.event.release.tag_name }} -DautoReleaseAfterClose=${{ env.AUTORELEASE_ARTIFACT }}
            -ntp -Dorg.slf4j.simpleLogger.log.net.sourceforge.pmd=error -Ddocker.showLogs=true
            -DskipNexusStagingDeployMojo=${{ env.SKIP_JAR_DEPLOYMENT }}
            -Ddocker.registry.username=${{ secrets.DOCKER_USERNAME }}
            -Ddocker.registry.account=${{ secrets.DOCKER_REGISTRY_ACCOUNT}}
            -Ddocker.registry.password=${{ secrets.DOCKER_PASSWORD }}
            -Dlibcal.client1.id=${{ secrets.LIBCAL_CLIENT1_ID }}
            -Dlibcal.client1.secret=${{ secrets.LIBCAL_CLIENT1_SECRET }}
            -Dlibcal.client2.id=${{ secrets.LIBCAL_CLIENT2_ID }}
            -Dlibcal.client2.secret=${{ secrets.LIBCAL_CLIENT2_SECRET }}
            -Dlibcal.token.endpoint="https://calendar.library.ucla.edu/1.1/oauth/token"
            -Dlibcal.base.url="https://calendar.library.ucla.edu"
            -Dlibcal.allowed.ips="127.0.0.0/16,10.10.10.0/27"
      - name: Detect New Helm Chart
        run: |
          CURRENT_CHART_VERSION=$(cat pom.xml | grep -i '<libcal.helm.chart.version>' | xargs | grep -oPm1 "(?<=<libcal.helm.chart.version>)[^<]+")
          HTTP_RESP=$(curl -s -w "%{http_code}" -o /dev/null https://chartmuseum.library.ucla.edu/api/charts/libcalproxy/${CURRENT_CHART_VERSION})
          echo "CM_HTTP_RESP=${HTTP_RESP}" >> $GITHUB_ENV
      - name: Deploy Helm Chart
        if: env.CM_HTTP_RESP == 404
        uses: samuelmeuli/action-maven-publish@201a45a3f311b2ee888f252ba9f4194257545709 # v1.4.0
        with:
          maven_goals_phases: "com.deviceinsight.helm:helm-maven-plugin:2.10.0:deploy"
          maven_profiles: default
          maven_args: >
            -Drevision=${{ github.event.release.tag_name }}
            -Dhelm.maven.repo.publish.url=${{ secrets.UCLALIB_HELM_CM_PUBLISH_URL }}
            -Dhelm.maven.repo.username=${{ secrets.UCLALIB_HELM_CM_USERNAME }}
            -Dhelm.maven.repo.password=${{ secrets.UCLALIB_HELM_CM_PASSWORD }}
